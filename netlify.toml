# Default build settings
[context.production]
  publish = "public"
  command = "git submodule update -f --init --recursive && npm install && make function-config && hugo -b https://tanzu.vmware.com/developer --minify"

[context.production.environment]
  HUGO_VERSION = "0.82.0"
  HUGO_ENV = "production"
  TZ='America/Los_Angeles'

[context.deploy-preview]
  command = "git submodule update -f --init --recursive && npm install && make function-config && hugo -F -b $DEPLOY_PRIME_URL/developer"
  
[context.deploy-preview.environment]
  HUGO_VERSION = "0.82.0"
  TZ='America/Los_Angeles'

[[plugins]]
  package = "@sentry/netlify-build-plugin"

  [plugins.inputs]
    deployPreviews = false

[[context.deploy-preview.plugins]]
  package = "@netlify/plugin-lighthouse"

  # optional, fails build when a category is below a threshold
  #[plugins.inputs.thresholds]
  #  performance = 0.9
  #  accessibility = 0.9
  #  best-practices = 0.9
  #  seo = 0.9
  #  pwa = 0.9

  # optional, deploy the lighthouse report to a path under your site
  #[plugins.inputs]
  #  output_path = "lighthouse/report.html"

  # to audit a sub path of the build directory
  # audit will use the top level thresholds
  [[context.deploy-preview.plugins.inputs.audits]]
    path = "developer"
    # you can specify output_path per audit, relative to the path
    output_path = "lighthouse/index.html"

  
[[redirects]]
  from = "/"
  to = "/developer"
  status = 302

[[redirects]]
  from = "/developer/get-workshop/*"
  to = "/.netlify/functions/get-workshop/:splat"
  force = true
  status = 200
  conditions = {Role = ["user"]}

[[redirects]]
  from = "/developer/workshop-live"
  to = "/developer/workshop-live"
  force = true
  status = 200
  conditions = {Role = ["user"]}

[[redirects]]
  from = "/developer/get-workshop/*"
  to = "/.netlify/functions/auth-start/:splat"
  force = true
  status = 200

[[redirects]]
  from = "/developer/auth-callback/*"
  to = "/.netlify/functions/auth-callback/:splat"
  force = true
  status = 200

[[redirects]]
  from = "/developer/workshop-live/*"
  to = "/developer/404.html"
  force = true
  status = 404

[[redirects]]
  from = "/developer/workshop-status/*"
  to = "/.netlify/functions/workshop-status/:splat"
  force = true
  status = 200

# Global 404 handler
[[redirects]]
  from = "/*"
  to = "/developer/404.html"
  status = 404
